name: Tests and Code Coverage

on:
    # Only on feature branches (not main/dev)
    push:
        branches-ignore: [main, dev]
        paths:
            - 'src/**'
            - 'tests/**'
            - 'package.json'
            - 'package-lock.json'
            - 'jest.config.js'
            - 'tsconfig.json'
            - 'tsconfig.test.json'
    # Allow manual trigger and reuse from other workflows
    workflow_call:

env:
    NODE_VERSION: '20'

jobs:
    test:
        name: Run Tests and Coverage
        runs-on: ubuntu-latest

        permissions:
            contents: read
            checks: write
            pull-requests: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linting (errors only)
              run: npm run ci:lint

            - name: Run tests with coverage
              run: npm run test:coverage

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage/lcov.info
                  fail_ci_if_error: false
                  verbose: true

            - name: Generate test report
              uses: dorny/test-reporter@v1
              if: success() || failure()
              with:
                  name: Jest Tests
                  path: coverage/junit.xml
                  reporter: jest-junit
                  fail-on-error: true

            - name: Comment PR with coverage
              if: github.event_name == 'pull_request'
              uses: romeovs/lcov-reporter-action@v0.3.1
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  lcov-file: ./coverage/lcov.info
                  delete-old-comments: true

            - name: Coverage Badge
              if: github.ref == 'refs/heads/main'
              uses: tj-actions/coverage-badge-js@v1
              with:
                  badge-path: ./coverage/badge.svg
                  coverage-source: coverage-summary

            - name: Verify minimum coverage
              run: |
                  COVERAGE=$(node -p "
                    const fs = require('fs');
                    const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
                    Math.round(coverage.total.lines.pct);
                  ")
                  echo "Current coverage: $COVERAGE%"
                  if [ $COVERAGE -lt 40 ]; then
                    echo "❌ Coverage is below 40% threshold"
                    exit 1
                  else
                    echo "✅ Coverage meets 40% threshold"
                  fi

    build-test:
        name: Build Test
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Test production build
              run: npm run build

            - name: Test development build
              run: npm run build:dev

            - name: Check bundle size
              run: |
                  echo "Production build size:"
                  du -sh dist/
                  echo "Main bundle files:"
                  ls -lh dist/*.js | head -5
